/* eslint-disable */
// @ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * OmniSaaS
 * Worker
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { InstanceLogDto } from './InstanceLogDto';
import {
    InstanceLogDtoFromJSON,
    InstanceLogDtoFromJSONTyped,
    InstanceLogDtoToJSON,
} from './InstanceLogDto';

/**
 * 
 * @export
 * @interface ResourceLogDto
 */
export interface ResourceLogDto {
    /**
     * The resource ID.
     * @type {string}
     * @memberof ResourceLogDto
     */
    resourceUniqueId: string;
    /**
     * The type of the resource.
     * @type {string}
     * @memberof ResourceLogDto
     */
    resourceType: string;
    /**
     * The log per instance.
     * @type {Array<InstanceLogDto>}
     * @memberof ResourceLogDto
     */
    instances: Array<InstanceLogDto>;
}

/**
 * Check if a given object implements the ResourceLogDto interface.
 */
export function instanceOfResourceLogDto(value: object): boolean {
    if (!('resourceUniqueId' in value)) return false;
    if (!('resourceType' in value)) return false;
    if (!('instances' in value)) return false;
    return true;
}

export function ResourceLogDtoFromJSON(json: any): ResourceLogDto {
    return ResourceLogDtoFromJSONTyped(json, false);
}

export function ResourceLogDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): ResourceLogDto {
    if (json == null) {
        return json;
    }
    return {
        
        'resourceUniqueId': json['resourceUniqueId'],
        'resourceType': json['resourceType'],
        'instances': ((json['instances'] as Array<any>).map(InstanceLogDtoFromJSON)),
    };
}

export function ResourceLogDtoToJSON(value?: ResourceLogDto | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'resourceUniqueId': value['resourceUniqueId'],
        'resourceType': value['resourceType'],
        'instances': ((value['instances'] as Array<any>).map(InstanceLogDtoToJSON)),
    };
}

