/* eslint-disable */
// @ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * OmniSaaS
 * Worker
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ResourceRequestDto
 */
export interface ResourceRequestDto {
    /**
     * The resource ID
     * @type {string}
     * @memberof ResourceRequestDto
     */
    resourceId: string;
    /**
     * The name of the resource type
     * @type {string}
     * @memberof ResourceRequestDto
     */
    resourceType: string;
    /**
     * The parameters
     * @type {{ [key: string]: any; }}
     * @memberof ResourceRequestDto
     */
    parameters: { [key: string]: any; };
    /**
     * The context values that will be added or overwritten to the deployment
     * @type {{ [key: string]: any; }}
     * @memberof ResourceRequestDto
     */
    context: { [key: string]: any; };
}

/**
 * Check if a given object implements the ResourceRequestDto interface.
 */
export function instanceOfResourceRequestDto(value: object): boolean {
    if (!('resourceId' in value)) return false;
    if (!('resourceType' in value)) return false;
    if (!('parameters' in value)) return false;
    if (!('context' in value)) return false;
    return true;
}

export function ResourceRequestDtoFromJSON(json: any): ResourceRequestDto {
    return ResourceRequestDtoFromJSONTyped(json, false);
}

export function ResourceRequestDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): ResourceRequestDto {
    if (json == null) {
        return json;
    }
    return {
        
        'resourceId': json['resourceId'],
        'resourceType': json['resourceType'],
        'parameters': json['parameters'],
        'context': json['context'],
    };
}

export function ResourceRequestDtoToJSON(value?: ResourceRequestDto | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'resourceId': value['resourceId'],
        'resourceType': value['resourceType'],
        'parameters': value['parameters'],
        'context': value['context'],
    };
}

