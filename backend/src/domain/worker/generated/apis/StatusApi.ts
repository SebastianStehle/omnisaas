/* tslint:disable */
/* eslint-disable */
/**
 * UberSaas
 * UberSaas Worker
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  StatusRequestDto,
  StatusResultDto,
} from '../models/index';
import {
    StatusRequestDtoFromJSON,
    StatusRequestDtoToJSON,
    StatusResultDtoFromJSON,
    StatusResultDtoToJSON,
} from '../models/index';

export interface PostStatusRequest {
    statusRequestDto: StatusRequestDto;
}

/**
 * 
 */
export class StatusApi extends runtime.BaseAPI {

    /**
     * Gets the status for all specified deployment IDs
     * 
     */
    async postStatusRaw(requestParameters: PostStatusRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<StatusResultDto>> {
        if (requestParameters['statusRequestDto'] == null) {
            throw new runtime.RequiredError(
                'statusRequestDto',
                'Required parameter "statusRequestDto" was null or undefined when calling postStatus().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/status`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: StatusRequestDtoToJSON(requestParameters['statusRequestDto']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => StatusResultDtoFromJSON(jsonValue));
    }

    /**
     * Gets the status for all specified deployment IDs
     * 
     */
    async postStatus(statusRequestDto: StatusRequestDto, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<StatusResultDto> {
        const response = await this.postStatusRaw({ statusRequestDto: statusRequestDto }, initOverrides);
        return await response.value();
    }

}
