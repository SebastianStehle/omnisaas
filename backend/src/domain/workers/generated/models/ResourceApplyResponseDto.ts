/* eslint-disable */
// @ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * Pangostack
 * Worker
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ConnectInfoDto } from './ConnectInfoDto';
import {
    ConnectInfoDtoFromJSON,
    ConnectInfoDtoFromJSONTyped,
    ConnectInfoDtoToJSON,
} from './ConnectInfoDto';

/**
 * 
 * @export
 * @interface ResourceApplyResponseDto
 */
export interface ResourceApplyResponseDto {
    /**
     * The context values that will be added or overwritten to the deployment.
     * @type {{ [key: string]: any; }}
     * @memberof ResourceApplyResponseDto
     */
    context: { [key: string]: any; };
    /**
     * Context that only contains values that are needed for this resource betwene subsequent calls.
     * @type {{ [key: string]: any; }}
     * @memberof ResourceApplyResponseDto
     */
    resourceContext: { [key: string]: any; } | null;
    /**
     * The output.
     * @type {string}
     * @memberof ResourceApplyResponseDto
     */
    log: string | null;
    /**
     * Provides values how to connect to the resource, for example Api Keys.
     * @type {{ [key: string]: ConnectInfoDto; }}
     * @memberof ResourceApplyResponseDto
     */
    connection: { [key: string]: ConnectInfoDto; };
}

/**
 * Check if a given object implements the ResourceApplyResponseDto interface.
 */
export function instanceOfResourceApplyResponseDto(value: object): boolean {
    if (!('context' in value)) return false;
    if (!('resourceContext' in value)) return false;
    if (!('log' in value)) return false;
    if (!('connection' in value)) return false;
    return true;
}

export function ResourceApplyResponseDtoFromJSON(json: any): ResourceApplyResponseDto {
    return ResourceApplyResponseDtoFromJSONTyped(json, false);
}

export function ResourceApplyResponseDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): ResourceApplyResponseDto {
    if (json == null) {
        return json;
    }
    return {
        
        'context': json['context'],
        'resourceContext': json['resourceContext'],
        'log': json['log'],
        'connection': (mapValues(json['connection'], ConnectInfoDtoFromJSON)),
    };
}

export function ResourceApplyResponseDtoToJSON(value?: ResourceApplyResponseDto | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'context': value['context'],
        'resourceContext': value['resourceContext'],
        'log': value['log'],
        'connection': (mapValues(value['connection'], ConnectInfoDtoToJSON)),
    };
}

