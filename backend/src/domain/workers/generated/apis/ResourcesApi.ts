/* eslint-disable */
// @ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * Pangostack
 * Worker
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ErrorResponseDto,
  ResourcesTypesDto,
} from '../models/index';
import {
    ErrorResponseDtoFromJSON,
    ErrorResponseDtoToJSON,
    ResourcesTypesDtoFromJSON,
    ResourcesTypesDtoToJSON,
} from '../models/index';

export interface GetResourceRequest {
    type: string;
}

/**
 * 
 */
export class ResourcesApi extends runtime.BaseAPI {

    /**
     * Get details about a resource.
     * 
     */
    async getResourceRaw(requestParameters: GetResourceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['type'] == null) {
            throw new runtime.RequiredError(
                'type',
                'Required parameter "type" was null or undefined when calling getResource().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/resources/{type}`.replace(`{${"type"}}`, encodeURIComponent(String(requestParameters['type']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * Get details about a resource.
     * 
     */
    async getResource(type: string, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.getResourceRaw({ type: type }, initOverrides);
    }

    /**
     * Gets the available resource types.
     * 
     */
    async getResourcesRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ResourcesTypesDto>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/resources`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ResourcesTypesDtoFromJSON(jsonValue));
    }

    /**
     * Gets the available resource types.
     * 
     */
    async getResources(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ResourcesTypesDto> {
        const response = await this.getResourcesRaw(initOverrides);
        return await response.value();
    }

}
