/* tslint:disable */
/* eslint-disable */
/**
 * UberSaas
 * UberSaas Worker
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ResourceParameterDto
 */
export interface ResourceParameterDto {
    /**
     * The type.
     * @type {string}
     * @memberof ResourceParameterDto
     */
    type: ResourceParameterDtoTypeEnum;
    /**
     * True, if required.
     * @type {boolean}
     * @memberof ResourceParameterDto
     */
    required?: boolean;
    /**
     * The description of the argument.
     * @type {string}
     * @memberof ResourceParameterDto
     */
    description?: string;
    /**
     * The minimum length.
     * @type {number}
     * @memberof ResourceParameterDto
     */
    minLength?: number;
    /**
     * The maximum length.
     * @type {number}
     * @memberof ResourceParameterDto
     */
    maxLength?: number;
    /**
     * The enum values.
     * @type {Array<string>}
     * @memberof ResourceParameterDto
     */
    allowedValues?: Array<string>;
}


/**
 * @export
 */
export const ResourceParameterDtoTypeEnum = {
    Boolean: 'boolean',
    Number: 'number',
    String: 'string'
} as const;
export type ResourceParameterDtoTypeEnum = typeof ResourceParameterDtoTypeEnum[keyof typeof ResourceParameterDtoTypeEnum];


/**
 * Check if a given object implements the ResourceParameterDto interface.
 */
export function instanceOfResourceParameterDto(value: object): boolean {
    if (!('type' in value)) return false;
    return true;
}

export function ResourceParameterDtoFromJSON(json: any): ResourceParameterDto {
    return ResourceParameterDtoFromJSONTyped(json, false);
}

export function ResourceParameterDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): ResourceParameterDto {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['type'],
        'required': json['required'] == null ? undefined : json['required'],
        'description': json['description'] == null ? undefined : json['description'],
        'minLength': json['minLength'] == null ? undefined : json['minLength'],
        'maxLength': json['maxLength'] == null ? undefined : json['maxLength'],
        'allowedValues': json['allowedValues'] == null ? undefined : json['allowedValues'],
    };
}

export function ResourceParameterDtoToJSON(value?: ResourceParameterDto | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'type': value['type'],
        'required': value['required'],
        'description': value['description'],
        'minLength': value['minLength'],
        'maxLength': value['maxLength'],
        'allowedValues': value['allowedValues'],
    };
}

