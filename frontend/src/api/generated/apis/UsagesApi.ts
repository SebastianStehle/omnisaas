//@ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * CCCC
 * CodeCentric Company Chat
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  RatingsDto,
  UsagesDto,
} from '../models/index';
import {
    RatingsDtoFromJSON,
    RatingsDtoToJSON,
    UsagesDtoFromJSON,
    UsagesDtoToJSON,
} from '../models/index';

/**
 * 
 */
export class UsagesApi extends runtime.BaseAPI {

    /**
     * Gets the ratings over time.
     * 
     */
    async getRatingsRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<RatingsDto>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/usages/ratings`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => RatingsDtoFromJSON(jsonValue));
    }

    /**
     * Gets the ratings over time.
     * 
     */
    async getRatings(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<RatingsDto> {
        const response = await this.getRatingsRaw(initOverrides);
        return await response.value();
    }

    /**
     * Gets the token usage.
     * 
     */
    async getTokenUsageRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<UsagesDto>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/usages/tokens`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => UsagesDtoFromJSON(jsonValue));
    }

    /**
     * Gets the token usage.
     * 
     */
    async getTokenUsage(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<UsagesDto> {
        const response = await this.getTokenUsageRaw(initOverrides);
        return await response.value();
    }

}
