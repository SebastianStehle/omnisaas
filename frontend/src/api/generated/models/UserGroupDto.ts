/* eslint-disable */
// @ts-nocheck
//@ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * Omni SaaS
 * SaaS Deployment Tool
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UserGroupDto
 */
export interface UserGroupDto {
    /**
     * The ID of the user group.
     * @type {string}
     * @memberof UserGroupDto
     */
    id: string;
    /**
     * The display name.
     * @type {string}
     * @memberof UserGroupDto
     */
    name: string;
    /**
     * Indicates if the users are admins.
     * @type {boolean}
     * @memberof UserGroupDto
     */
    isAdmin: boolean;
    /**
     * Indicates if the user group is builtin and cannot be deleted.
     * @type {boolean}
     * @memberof UserGroupDto
     */
    isBuiltIn: boolean;
    /**
     * The monthly allowed tokens for all users in the group.
     * @type {object}
     * @memberof UserGroupDto
     */
    monthlyTokens?: object;
    /**
     * The monthly allowed tokens per user in the group.
     * @type {object}
     * @memberof UserGroupDto
     */
    monthlyUserTokens?: object;
    /**
     * Indicates if the file upload should be hidden.
     * @type {boolean}
     * @memberof UserGroupDto
     */
    hideFileUpload?: boolean;
}

/**
 * Check if a given object implements the UserGroupDto interface.
 */
export function instanceOfUserGroupDto(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "isAdmin" in value;
    isInstance = isInstance && "isBuiltIn" in value;

    return isInstance;
}

export function UserGroupDtoFromJSON(json: any): UserGroupDto {
    return UserGroupDtoFromJSONTyped(json, false);
}

export function UserGroupDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserGroupDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'isAdmin': json['isAdmin'],
        'isBuiltIn': json['isBuiltIn'],
        'monthlyTokens': !exists(json, 'monthlyTokens') ? undefined : json['monthlyTokens'],
        'monthlyUserTokens': !exists(json, 'monthlyUserTokens') ? undefined : json['monthlyUserTokens'],
        'hideFileUpload': !exists(json, 'hideFileUpload') ? undefined : json['hideFileUpload'],
    };
}

export function UserGroupDtoToJSON(value?: UserGroupDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'name': value.name,
        'isAdmin': value.isAdmin,
        'isBuiltIn': value.isBuiltIn,
        'monthlyTokens': value.monthlyTokens,
        'monthlyUserTokens': value.monthlyUserTokens,
        'hideFileUpload': value.hideFileUpload,
    };
}

