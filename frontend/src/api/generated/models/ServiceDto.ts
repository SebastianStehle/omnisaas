/* eslint-disable */
// @ts-nocheck
//@ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * Pangostack
 * SaaS Deployment Tool
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ServiceDto
 */
export interface ServiceDto {
    /**
     * The ID of the service.
     * @type {number}
     * @memberof ServiceDto
     */
    id: number;
    /**
     * The name of the service.
     * @type {string}
     * @memberof ServiceDto
     */
    name: string;
    /**
     * The description.
     * @type {string}
     * @memberof ServiceDto
     */
    description: string;
    /**
     * The number of deployments.
     * @type {number}
     * @memberof ServiceDto
     */
    numDeployments: number;
    /**
     * The latest version.
     * @type {string}
     * @memberof ServiceDto
     */
    latestVersion: string | null;
    /**
     * The environment settings.
     * @type {{ [key: string]: string; }}
     * @memberof ServiceDto
     */
    environment: { [key: string]: string; };
    /**
     * The currency.
     * @type {string}
     * @memberof ServiceDto
     */
    currency: string;
    /**
     * The price per Core and hour in the selected currency.
     * @type {number}
     * @memberof ServiceDto
     */
    pricePerCoreHour: number;
    /**
     * The price per Memory in GB and hour in the selected currency.
     * @type {number}
     * @memberof ServiceDto
     */
    pricePerMemoryGBHour: number;
    /**
     * The price per Disk in GB and hour in the selected currency.
     * @type {number}
     * @memberof ServiceDto
     */
    pricePerVolumeGBHour: number;
    /**
     * The price per Storage in GB and month in the selected currency.
     * @type {number}
     * @memberof ServiceDto
     */
    pricePerStorageGBMonth: number;
    /**
     * The additional fixed price.
     * @type {number}
     * @memberof ServiceDto
     */
    fixedPrice: number;
    /**
     * Indicates if the service is active (has at least one active version).
     * @type {boolean}
     * @memberof ServiceDto
     */
    isActive: boolean;
    /**
     * Indicates if the service is public.
     * @type {boolean}
     * @memberof ServiceDto
     */
    isPublic: boolean;
}

/**
 * Check if a given object implements the ServiceDto interface.
 */
export function instanceOfServiceDto(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "description" in value;
    isInstance = isInstance && "numDeployments" in value;
    isInstance = isInstance && "latestVersion" in value;
    isInstance = isInstance && "environment" in value;
    isInstance = isInstance && "currency" in value;
    isInstance = isInstance && "pricePerCoreHour" in value;
    isInstance = isInstance && "pricePerMemoryGBHour" in value;
    isInstance = isInstance && "pricePerVolumeGBHour" in value;
    isInstance = isInstance && "pricePerStorageGBMonth" in value;
    isInstance = isInstance && "fixedPrice" in value;
    isInstance = isInstance && "isActive" in value;
    isInstance = isInstance && "isPublic" in value;

    return isInstance;
}

export function ServiceDtoFromJSON(json: any): ServiceDto {
    return ServiceDtoFromJSONTyped(json, false);
}

export function ServiceDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): ServiceDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'description': json['description'],
        'numDeployments': json['numDeployments'],
        'latestVersion': json['latestVersion'],
        'environment': json['environment'],
        'currency': json['currency'],
        'pricePerCoreHour': json['pricePerCoreHour'],
        'pricePerMemoryGBHour': json['pricePerMemoryGBHour'],
        'pricePerVolumeGBHour': json['pricePerVolumeGBHour'],
        'pricePerStorageGBMonth': json['pricePerStorageGBMonth'],
        'fixedPrice': json['fixedPrice'],
        'isActive': json['isActive'],
        'isPublic': json['isPublic'],
    };
}

export function ServiceDtoToJSON(value?: ServiceDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'name': value.name,
        'description': value.description,
        'numDeployments': value.numDeployments,
        'latestVersion': value.latestVersion,
        'environment': value.environment,
        'currency': value.currency,
        'pricePerCoreHour': value.pricePerCoreHour,
        'pricePerMemoryGBHour': value.pricePerMemoryGBHour,
        'pricePerVolumeGBHour': value.pricePerVolumeGBHour,
        'pricePerStorageGBMonth': value.pricePerStorageGBMonth,
        'fixedPrice': value.fixedPrice,
        'isActive': value.isActive,
        'isPublic': value.isPublic,
    };
}

