//@ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * CCCC
 * CodeCentric Company Chat
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CreateExtensionDto
 */
export interface CreateExtensionDto {
    /**
     * The name of the extension.
     * @type {string}
     * @memberof CreateExtensionDto
     */
    name: string;
    /**
     * The values.
     * @type {{ [key: string]: any; }}
     * @memberof CreateExtensionDto
     */
    values: { [key: string]: any; };
    /**
     * Indicates whether the extension is enabled.
     * @type {boolean}
     * @memberof CreateExtensionDto
     */
    enabled: boolean;
}

/**
 * Check if a given object implements the CreateExtensionDto interface.
 */
export function instanceOfCreateExtensionDto(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "values" in value;
    isInstance = isInstance && "enabled" in value;

    return isInstance;
}

export function CreateExtensionDtoFromJSON(json: any): CreateExtensionDto {
    return CreateExtensionDtoFromJSONTyped(json, false);
}

export function CreateExtensionDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateExtensionDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': json['name'],
        'values': json['values'],
        'enabled': json['enabled'],
    };
}

export function CreateExtensionDtoToJSON(value?: CreateExtensionDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'values': value.values,
        'enabled': value.enabled,
    };
}

