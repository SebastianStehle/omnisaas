//@ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * CCCC
 * CodeCentric Company Chat
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface BucketDto
 */
export interface BucketDto {
    /**
     * The ID of the bucket.
     * @type {number}
     * @memberof BucketDto
     */
    id: number;
    /**
     * The name of the bucket.
     * @type {string}
     * @memberof BucketDto
     */
    name: string;
    /**
     * The URL to the RAG server.
     * @type {string}
     * @memberof BucketDto
     */
    endpoint: string;
    /**
     * The optional headers.
     * @type {string}
     * @memberof BucketDto
     */
    headers: string;
    /**
     * Indicates whether the bucket is the default.
     * @type {boolean}
     * @memberof BucketDto
     */
    isDefault: boolean;
}

/**
 * Check if a given object implements the BucketDto interface.
 */
export function instanceOfBucketDto(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "endpoint" in value;
    isInstance = isInstance && "headers" in value;
    isInstance = isInstance && "isDefault" in value;

    return isInstance;
}

export function BucketDtoFromJSON(json: any): BucketDto {
    return BucketDtoFromJSONTyped(json, false);
}

export function BucketDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): BucketDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'endpoint': json['endpoint'],
        'headers': json['headers'],
        'isDefault': json['isDefault'],
    };
}

export function BucketDtoToJSON(value?: BucketDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'name': value.name,
        'endpoint': value.endpoint,
        'headers': value.headers,
        'isDefault': value.isDefault,
    };
}

