/* eslint-disable */
// @ts-nocheck
//@ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * Pangostack
 * SaaS Deployment Tool
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ResourceNodeStatusDto } from './ResourceNodeStatusDto';
import {
    ResourceNodeStatusDtoFromJSON,
    ResourceNodeStatusDtoFromJSONTyped,
    ResourceNodeStatusDtoToJSON,
} from './ResourceNodeStatusDto';

/**
 * 
 * @export
 * @interface ResourceWorkloadStatusDto
 */
export interface ResourceWorkloadStatusDto {
    /**
     * The name of the workload.
     * @type {string}
     * @memberof ResourceWorkloadStatusDto
     */
    name: string;
    /**
     * All nodes within the workload.
     * @type {Array<ResourceNodeStatusDto>}
     * @memberof ResourceWorkloadStatusDto
     */
    nodes: Array<ResourceNodeStatusDto>;
}

/**
 * Check if a given object implements the ResourceWorkloadStatusDto interface.
 */
export function instanceOfResourceWorkloadStatusDto(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "nodes" in value;

    return isInstance;
}

export function ResourceWorkloadStatusDtoFromJSON(json: any): ResourceWorkloadStatusDto {
    return ResourceWorkloadStatusDtoFromJSONTyped(json, false);
}

export function ResourceWorkloadStatusDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): ResourceWorkloadStatusDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': json['name'],
        'nodes': ((json['nodes'] as Array<any>).map(ResourceNodeStatusDtoFromJSON)),
    };
}

export function ResourceWorkloadStatusDtoToJSON(value?: ResourceWorkloadStatusDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'nodes': ((value.nodes as Array<any>).map(ResourceNodeStatusDtoToJSON)),
    };
}

