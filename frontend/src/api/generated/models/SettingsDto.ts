//@ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * Omni SaaS
 * SaaS Deployment Tool
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface SettingsDto
 */
export interface SettingsDto {
    /**
     * The name of the app.
     * @type {string}
     * @memberof SettingsDto
     */
    name?: string;
    /**
     * The primary color used for buttons and links.
     * @type {string}
     * @memberof SettingsDto
     */
    primaryColor?: string;
    /**
     * The primary content color used for buttons and links.
     * @type {string}
     * @memberof SettingsDto
     */
    primaryContentColor?: string;
    /**
     * The welcome text.
     * @type {string}
     * @memberof SettingsDto
     */
    welcomeText?: string;
    /**
     * Some custom css.
     * @type {string}
     * @memberof SettingsDto
     */
    customCss?: string;
}

/**
 * Check if a given object implements the SettingsDto interface.
 */
export function instanceOfSettingsDto(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function SettingsDtoFromJSON(json: any): SettingsDto {
    return SettingsDtoFromJSONTyped(json, false);
}

export function SettingsDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): SettingsDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': !exists(json, 'name') ? undefined : json['name'],
        'primaryColor': !exists(json, 'primaryColor') ? undefined : json['primaryColor'],
        'primaryContentColor': !exists(json, 'primaryContentColor') ? undefined : json['primaryContentColor'],
        'welcomeText': !exists(json, 'welcomeText') ? undefined : json['welcomeText'],
        'customCss': !exists(json, 'customCss') ? undefined : json['customCss'],
    };
}

export function SettingsDtoToJSON(value?: SettingsDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'primaryColor': value.primaryColor,
        'primaryContentColor': value.primaryContentColor,
        'welcomeText': value.welcomeText,
        'customCss': value.customCss,
    };
}

