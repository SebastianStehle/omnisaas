//@ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * CCCC
 * CodeCentric Company Chat
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface FileDto
 */
export interface FileDto {
    /**
     * The ID of the file.
     * @type {number}
     * @memberof FileDto
     */
    id: number;
    /**
     * The name of the file.
     * @type {string}
     * @memberof FileDto
     */
    fileName: string;
    /**
     * The size of the file in bytes.
     * @type {number}
     * @memberof FileDto
     */
    fileSize: number;
    /**
     * The mime type.
     * @type {string}
     * @memberof FileDto
     */
    mimeType: string;
    /**
     * The time when the file has been created
     * @type {Date}
     * @memberof FileDto
     */
    uploadedAt: Date;
}

/**
 * Check if a given object implements the FileDto interface.
 */
export function instanceOfFileDto(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "fileName" in value;
    isInstance = isInstance && "fileSize" in value;
    isInstance = isInstance && "mimeType" in value;
    isInstance = isInstance && "uploadedAt" in value;

    return isInstance;
}

export function FileDtoFromJSON(json: any): FileDto {
    return FileDtoFromJSONTyped(json, false);
}

export function FileDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): FileDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'fileName': json['fileName'],
        'fileSize': json['fileSize'],
        'mimeType': json['mimeType'],
        'uploadedAt': (new Date(json['uploadedAt'])),
    };
}

export function FileDtoToJSON(value?: FileDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'fileName': value.fileName,
        'fileSize': value.fileSize,
        'mimeType': value.mimeType,
        'uploadedAt': (value.uploadedAt.toISOString()),
    };
}

