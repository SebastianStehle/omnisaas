//@ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * CCCC
 * CodeCentric Company Chat
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface StreamErrorEventDto
 */
export interface StreamErrorEventDto {
    /**
     * The error message.
     * @type {string}
     * @memberof StreamErrorEventDto
     */
    message: string;
    /**
     * 
     * @type {string}
     * @memberof StreamErrorEventDto
     */
    type: StreamErrorEventDtoTypeEnum;
}


/**
 * @export
 */
export const StreamErrorEventDtoTypeEnum = {
    Error: 'error'
} as const;
export type StreamErrorEventDtoTypeEnum = typeof StreamErrorEventDtoTypeEnum[keyof typeof StreamErrorEventDtoTypeEnum];


/**
 * Check if a given object implements the StreamErrorEventDto interface.
 */
export function instanceOfStreamErrorEventDto(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "message" in value;
    isInstance = isInstance && "type" in value;

    return isInstance;
}

export function StreamErrorEventDtoFromJSON(json: any): StreamErrorEventDto {
    return StreamErrorEventDtoFromJSONTyped(json, false);
}

export function StreamErrorEventDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): StreamErrorEventDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'message': json['message'],
        'type': json['type'],
    };
}

export function StreamErrorEventDtoToJSON(value?: StreamErrorEventDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'message': value.message,
        'type': value.type,
    };
}

