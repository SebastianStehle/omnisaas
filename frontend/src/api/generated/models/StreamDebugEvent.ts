//@ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * CCCC
 * CodeCentric Company Chat
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface StreamDebugEvent
 */
export interface StreamDebugEvent {
    /**
     * The debug information.
     * @type {string}
     * @memberof StreamDebugEvent
     */
    content: string;
    /**
     * 
     * @type {string}
     * @memberof StreamDebugEvent
     */
    type: StreamDebugEventTypeEnum;
}


/**
 * @export
 */
export const StreamDebugEventTypeEnum = {
    Debug: 'debug'
} as const;
export type StreamDebugEventTypeEnum = typeof StreamDebugEventTypeEnum[keyof typeof StreamDebugEventTypeEnum];


/**
 * Check if a given object implements the StreamDebugEvent interface.
 */
export function instanceOfStreamDebugEvent(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "content" in value;
    isInstance = isInstance && "type" in value;

    return isInstance;
}

export function StreamDebugEventFromJSON(json: any): StreamDebugEvent {
    return StreamDebugEventFromJSONTyped(json, false);
}

export function StreamDebugEventFromJSONTyped(json: any, ignoreDiscriminator: boolean): StreamDebugEvent {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'content': json['content'],
        'type': json['type'],
    };
}

export function StreamDebugEventToJSON(value?: StreamDebugEvent | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'content': value.content,
        'type': value.type,
    };
}

