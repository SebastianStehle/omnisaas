/* eslint-disable */
// @ts-nocheck
//@ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * Omni SaaS
 * SaaS Deployment Tool
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface InvoiceDto
 */
export interface InvoiceDto {
    /**
     * The invoice number.
     * @type {string}
     * @memberof InvoiceDto
     */
    number: string;
    /**
     * The download link.
     * @type {string}
     * @memberof InvoiceDto
     */
    downloadLink: string;
    /**
     * The date the invoice has been issued.
     * @type {Date}
     * @memberof InvoiceDto
     */
    dueDate: Date | null;
    /**
     * The total amount of the invoice.
     * @type {number}
     * @memberof InvoiceDto
     */
    amount: number;
    /**
     * The status of the invoice.
     * @type {string}
     * @memberof InvoiceDto
     */
    status: InvoiceDtoStatusEnum;
    /**
     * The currency.
     * @type {string}
     * @memberof InvoiceDto
     */
    currency: string;
}


/**
 * @export
 */
export const InvoiceDtoStatusEnum = {
    Paid: 'Paid',
    PaymentDue: 'PaymentDue',
    NotPaid: 'NotPaid',
    Voided: 'Voided',
    Pending: 'Pending'
} as const;
export type InvoiceDtoStatusEnum = typeof InvoiceDtoStatusEnum[keyof typeof InvoiceDtoStatusEnum];


/**
 * Check if a given object implements the InvoiceDto interface.
 */
export function instanceOfInvoiceDto(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "number" in value;
    isInstance = isInstance && "downloadLink" in value;
    isInstance = isInstance && "dueDate" in value;
    isInstance = isInstance && "amount" in value;
    isInstance = isInstance && "status" in value;
    isInstance = isInstance && "currency" in value;

    return isInstance;
}

export function InvoiceDtoFromJSON(json: any): InvoiceDto {
    return InvoiceDtoFromJSONTyped(json, false);
}

export function InvoiceDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): InvoiceDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'number': json['number'],
        'downloadLink': json['downloadLink'],
        'dueDate': (json['dueDate'] === null ? null : new Date(json['dueDate'])),
        'amount': json['amount'],
        'status': json['status'],
        'currency': json['currency'],
    };
}

export function InvoiceDtoToJSON(value?: InvoiceDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'number': value.number,
        'downloadLink': value.downloadLink,
        'dueDate': (value.dueDate === null ? null : value.dueDate.toISOString()),
        'amount': value.amount,
        'status': value.status,
        'currency': value.currency,
    };
}

