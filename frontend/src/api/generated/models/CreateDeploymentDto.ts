/* eslint-disable */
// @ts-nocheck
//@ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * Omni SaaS
 * SaaS Deployment Tool
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CreateDeploymentDto
 */
export interface CreateDeploymentDto {
    /**
     * The optional name to describe the deployment.
     * @type {string}
     * @memberof CreateDeploymentDto
     */
    name: string | null;
    /**
     * The ID of the service.
     * @type {number}
     * @memberof CreateDeploymentDto
     */
    serviceId: number;
    /**
     * The parameters.
     * @type {{ [key: string]: any; }}
     * @memberof CreateDeploymentDto
     */
    parameters: { [key: string]: any; };
    /**
     * The URL to call after the deployment has been created.
     * @type {string}
     * @memberof CreateDeploymentDto
     */
    confirmUrl: string | null;
    /**
     * The URL to call after the deployment has been cancelled.
     * @type {string}
     * @memberof CreateDeploymentDto
     */
    cancelUrl: string | null;
}

/**
 * Check if a given object implements the CreateDeploymentDto interface.
 */
export function instanceOfCreateDeploymentDto(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "serviceId" in value;
    isInstance = isInstance && "parameters" in value;
    isInstance = isInstance && "confirmUrl" in value;
    isInstance = isInstance && "cancelUrl" in value;

    return isInstance;
}

export function CreateDeploymentDtoFromJSON(json: any): CreateDeploymentDto {
    return CreateDeploymentDtoFromJSONTyped(json, false);
}

export function CreateDeploymentDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateDeploymentDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': json['name'],
        'serviceId': json['serviceId'],
        'parameters': json['parameters'],
        'confirmUrl': json['confirmUrl'],
        'cancelUrl': json['cancelUrl'],
    };
}

export function CreateDeploymentDtoToJSON(value?: CreateDeploymentDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'serviceId': value.serviceId,
        'parameters': value.parameters,
        'confirmUrl': value.confirmUrl,
        'cancelUrl': value.cancelUrl,
    };
}

