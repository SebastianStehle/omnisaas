//@ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * CCCC
 * CodeCentric Company Chat
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { StreamUIRequestDto } from './StreamUIRequestDto';
import {
    StreamUIRequestDtoFromJSON,
    StreamUIRequestDtoFromJSONTyped,
    StreamUIRequestDtoToJSON,
} from './StreamUIRequestDto';

/**
 * 
 * @export
 * @interface StreamUIEventDto
 */
export interface StreamUIEventDto {
    /**
     * 
     * @type {StreamUIRequestDto}
     * @memberof StreamUIEventDto
     */
    request: StreamUIRequestDto;
    /**
     * 
     * @type {string}
     * @memberof StreamUIEventDto
     */
    type: StreamUIEventDtoTypeEnum;
}


/**
 * @export
 */
export const StreamUIEventDtoTypeEnum = {
    Ui: 'ui'
} as const;
export type StreamUIEventDtoTypeEnum = typeof StreamUIEventDtoTypeEnum[keyof typeof StreamUIEventDtoTypeEnum];


/**
 * Check if a given object implements the StreamUIEventDto interface.
 */
export function instanceOfStreamUIEventDto(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "request" in value;
    isInstance = isInstance && "type" in value;

    return isInstance;
}

export function StreamUIEventDtoFromJSON(json: any): StreamUIEventDto {
    return StreamUIEventDtoFromJSONTyped(json, false);
}

export function StreamUIEventDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): StreamUIEventDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'request': StreamUIRequestDtoFromJSON(json['request']),
        'type': json['type'],
    };
}

export function StreamUIEventDtoToJSON(value?: StreamUIEventDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'request': StreamUIRequestDtoToJSON(value.request),
        'type': value.type,
    };
}

