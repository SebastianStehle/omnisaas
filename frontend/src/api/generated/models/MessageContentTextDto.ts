//@ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * CCCC
 * CodeCentric Company Chat
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface MessageContentTextDto
 */
export interface MessageContentTextDto {
    /**
     * The content as text.
     * @type {string}
     * @memberof MessageContentTextDto
     */
    text: string;
    /**
     * 
     * @type {string}
     * @memberof MessageContentTextDto
     */
    type: MessageContentTextDtoTypeEnum;
}


/**
 * @export
 */
export const MessageContentTextDtoTypeEnum = {
    Text: 'text'
} as const;
export type MessageContentTextDtoTypeEnum = typeof MessageContentTextDtoTypeEnum[keyof typeof MessageContentTextDtoTypeEnum];


/**
 * Check if a given object implements the MessageContentTextDto interface.
 */
export function instanceOfMessageContentTextDto(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "text" in value;
    isInstance = isInstance && "type" in value;

    return isInstance;
}

export function MessageContentTextDtoFromJSON(json: any): MessageContentTextDto {
    return MessageContentTextDtoFromJSONTyped(json, false);
}

export function MessageContentTextDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): MessageContentTextDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'text': json['text'],
        'type': json['type'],
    };
}

export function MessageContentTextDtoToJSON(value?: MessageContentTextDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'text': value.text,
        'type': value.type,
    };
}

