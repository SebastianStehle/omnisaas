//@ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * CCCC
 * CodeCentric Company Chat
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { MessageContentImageUrlDto } from './MessageContentImageUrlDto';
import {
    instanceOfMessageContentImageUrlDto,
    MessageContentImageUrlDtoFromJSON,
    MessageContentImageUrlDtoFromJSONTyped,
    MessageContentImageUrlDtoToJSON,
} from './MessageContentImageUrlDto';
import type { MessageContentTextDto } from './MessageContentTextDto';
import {
    instanceOfMessageContentTextDto,
    MessageContentTextDtoFromJSON,
    MessageContentTextDtoFromJSONTyped,
    MessageContentTextDtoToJSON,
} from './MessageContentTextDto';

/**
 * @type MessageContentDto
 * 
 * @export
 */
export type MessageContentDto = { type: 'image_url' } & MessageContentImageUrlDto | { type: 'text' } & MessageContentTextDto;

export function MessageContentDtoFromJSON(json: any): MessageContentDto {
    return MessageContentDtoFromJSONTyped(json, false);
}

export function MessageContentDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): MessageContentDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    switch (json['type']) {
        case 'image_url':
            return {...MessageContentImageUrlDtoFromJSONTyped(json, true), type: 'image_url'};
        case 'text':
            return {...MessageContentTextDtoFromJSONTyped(json, true), type: 'text'};
        default:
            throw new Error(`No variant of MessageContentDto exists with 'type=${json['type']}'`);
    }
}

export function MessageContentDtoToJSON(value?: MessageContentDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    switch (value['type']) {
        case 'image_url':
            return MessageContentImageUrlDtoToJSON(value);
        case 'text':
            return MessageContentTextDtoToJSON(value);
        default:
            throw new Error(`No variant of MessageContentDto exists with 'type=${value['type']}'`);
    }

}

